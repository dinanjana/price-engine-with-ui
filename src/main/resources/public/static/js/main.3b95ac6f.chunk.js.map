{"version":3,"sources":["component/Item.jsx","repository/ItemAPI.js","component/Calculator.jsx","component/ItemList.jsx","App.js","serviceWorker.js","index.js"],"names":["Item","name","price","Array","from","length","map","Header","_","index","getItems","a","axios","get","response","data","console","error","getPricePerUnit","item","units","getPriceForARange","start","end","Calculator","show","handleClose","items","useState","setItem","count","setCount","setPrice","useEffect","Modal","onHide","backdrop","keyboard","closeButton","Title","Body","Container","Row","Col","xs","md","Form","Group","controlId","Label","Control","as","onChange","event","value","currentTarget","Button","variant","onClick","nextCount","then","Footer","ItemList","setItems","prices","setPrices","showCalculator","setShowCalculator","log","Promise","all","Table","responsive","i","undefined","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3b95ac6f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Item = ({ name, price = Array.from({ length: 50 }) }) => {\n    return(\n        <tr>\n            <td>{name}</td>\n            {price.map(price => (<td>{price}</td>))}\n        </tr>\n    );\n};\n\nconst Header = () => {\n  return(\n      <tr>\n          <th>Item</th>\n          {Array.from({ length: 50 }).map((_, index) => (<th>{index + 1} unit/s</th>))}\n      </tr>\n  )\n};\n\nexport {\n    Item,\n    Header,\n}","import axios from 'axios';\n\nconst getItems = async() => {\n    try {\n        const response = await axios.get('http://localhost:9090/price-engine/v1/items');\n        return response.data;\n    } catch (e) {\n        console.error(e);\n        throw e;\n    }\n};\n\nconst getPricePerUnit = async (item, units) => {\n    try {\n        const response = await axios.get(`http://localhost:9090/price-engine/v1/items/${item}/price/${units}`);\n        return response.data;\n    } catch (e) {\n        console.error(e);\n        throw e;\n    }\n};\n\nconst getPriceForARange = async (item, start, end) => {\n    try {\n        const response = await axios.get(`http://localhost:9090/price-engine/v1/items/${item}/price?start=${start}&end=${end}`);\n        return response.data;\n    } catch (e) {\n        console.error(e);\n        throw e;\n    }\n};\n\nexport {\n    getItems,\n    getPricePerUnit,\n    getPriceForARange,\n}","import React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { getPricePerUnit } from '../repository/ItemAPI';\n\nconst Calculator = ({ show, handleClose, items }) => {\n\n    const [item, setItem] = useState(null);\n    const [count, setCount] = useState(0);\n    const [price, setPrice] = useState(0.0);\n\n    useEffect(() => {\n        if (items && !item) {\n            setItem(items[0].name);\n        }\n    });\n\n    const selectItem = event => {\n        const { value } = event.currentTarget;\n        setItem(value);\n    };\n\n    const increaseCount = () => {\n        const nextCount = count + 1;\n        setCount(nextCount);\n        getPricePerUnit(item, nextCount).then(setPrice);\n    };\n    const decreaseCount = () => {\n        const nextCount = count -1;\n        if (nextCount > -1) {\n            setCount(nextCount);\n            getPricePerUnit(item, nextCount).then(setPrice);\n        }\n    };\n\n    return(\n        <Modal\n            show={show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>Price Calculator</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Container>\n                    <Row>\n                        <Col xs={6} md={6}>\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                <Form.Label>Select an item</Form.Label>\n                                <Form.Control as=\"select\" onChange={selectItem}>\n                                    {items ? items.map(item => <option>{item.name}</option>): <option/>}\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col xs={2} md={2}>\n                            <Button variant=\"primary\" onClick={increaseCount}>\n                                +\n                            </Button>\n                        </Col>\n                        <Col xs={2} md={2}>\n                            {count}\n                        </Col>\n                        <Col xs={2} md={2}>\n                            <Button variant=\"secondary\" onClick={decreaseCount}>\n                                -\n                            </Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        Price: ${price}\n                    </Row>\n                </Container>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"primary\" onClick={handleClose}>\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default Calculator;","import React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport { Item, Header } from './Item'\nimport Calculator from './Calculator';\nimport { getItems, getPriceForARange } from '../repository/ItemAPI';\n\nfunction ItemList() {\n    const [ items, setItems ] = useState(null);\n    const [ prices, setPrices ] = useState(null);\n    const [ showCalculator, setShowCalculator ] = useState(false);\n\n    const handleCloseCalculator = () => setShowCalculator(false);\n    const handleOpenCalculator = () => setShowCalculator(true);\n\n    useEffect(() => {\n        if (items == null) {\n            getItems().then(items => setItems(items));\n            console.log(items);\n            return;\n        }\n\n        if (items != null && prices == null) {\n            Promise.all(items.map(item => getPriceForARange(item.name, 1, 50))).then(prices => setPrices(prices));\n        }\n    });\n\n    return(\n        <>\n            <Table responsive>\n                <thead>\n                    <Header/>\n                </thead>\n                <tbody>\n                    {items != null ? items.map((item, i) => <Item name={item.name} price={prices != null ? prices[i] : undefined}/>) : ''}\n                </tbody>\n            </Table>\n            <Button variant=\"primary\" onClick={handleOpenCalculator}>\n                Launch price calculator\n            </Button>\n            <Calculator\n                show={showCalculator}\n                handleClose={handleCloseCalculator}\n                items={items}\n            >\n            </Calculator>\n        </>\n    )\n}\n\nexport default ItemList;\n","import React from 'react';\nimport ItemList from './component/ItemList';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ItemList/>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}